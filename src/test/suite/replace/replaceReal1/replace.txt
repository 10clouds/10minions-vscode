function decomposeMarkdownString(markdownString: string, languageId: string): string[] {
  const decomposedStringParts: string[] = [];
  const lines = markdownString.split('\n');
  let inCodeBlock = false;
  let codeLanguage = '';
  
  lines.forEach(line => {
    if (line.startsWith("```")) {
      // Switch between code block and comment states.
      inCodeBlock = !inCodeBlock;
      
      // Update codeLanguage when entering a code block.
      if (inCodeBlock) {
        codeLanguage = line.slice(3);
      }
    } else if (inCodeBlock && codeLanguage === languageId) {
      // Add line as is when inside a code block with matching language.
      decomposedStringParts.push(line);
    } else {
      // Add line as a comment when outside of a compatible code block.
      const languageSpecificComment = getCommentForLanguage(languageId, line);
      decomposedStringParts.push(languageSpecificComment);
    }
  });

  return decomposedStringParts;
}