import json

from django.db.models import Q

from rest_framework.decorators import api_view
from rest_framework.response import Response

from models import Product
from serializers import ProductSerializer


@api_view(['GET'])
def get_products(request):
    keyword = request.GET.pop('keyword')
    filters = request.GET.dict()

    products = Product.objects.filter(
        Q(name__icontains=keyword) |
        Q(description__icontains=keyword) |
        Q(category__name__icontains=keyword)
    )

    if filters.get('min_price'):
        products = products.filter(price__gte=filters['min_price'])

    if filters.get('max_price'):
        products = products.filter(price__lte=filters['max_price'])

    if filters.get('brands'):
        brands = filters['brands'].split(',')
        products = products.filter(brand__name__in=brands)

    if filters.get('categories'):
        categories = filters['categories'].split(',')
        products = products.filter(category__name__in=categories)

    if filters.get('attributes'):
        attributes = json.loads(filters['attributes'])
        
        for attribute, value_list in attributes.items():
            value_list = value_list.split(',')
            
            products = products.filter(attributes__key=attribute, attributes__value__in=value_list)

    return Response(ProductSerializer(products, many=True).data)
